version: '3.9'

services:
  postgres:
    restart: always
    environment:
      # Additional PostgreSQL tuning for production
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.utf8"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=4MB"
      - "-c"
      - "huge_pages=off"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"

  backend:
    restart: always
    environment:
      # Production settings
      LOG_LEVEL: "INFO"
      DEPLOYMENT_MODE: "production"
      # Security headers
      SECURE_HEADERS: "true"
      # Performance settings
      WEB_CONCURRENCY: "4"
      MAX_OVERFLOW: "20"
      POOL_PRE_PING: "true"
      POOL_RECYCLE: "3600"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    restart: always
    environment:
      # Streamlit production settings
      STREAMLIT_SERVER_ENABLE_CORS: "false"
      STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION: "true"
      STREAMLIT_SERVER_MAX_UPLOAD_SIZE: "200"
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  watcher:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Production monitoring with Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - foreporting-network
    restart: always

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - foreporting-network
    restart: always
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data: